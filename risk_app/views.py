from django.shortcuts import render
from .forms import ProjectForm
from .utils.risk_score import calculate_risk_score
from .utils.gwo import gwo_optimize
from .models import RiskEvaluation

def interpret_risk(score):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ä–∏—Å–∫–∞ –ø–æ —á–∏—Å–ª–æ–≤–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é RiskScore."""
    if score <= 0.20:
        return "üü¶ –û—á–µ–Ω—å –Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫"
    elif score <= 0.40:
        return "üü¢ –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫"
    elif score <= 0.60:
        return "üü° –£–º–µ—Ä–µ–Ω–Ω—ã–π —Ä–∏—Å–∫"
    elif score <= 0.80:
        return "üü† –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫"
    else:
        return "üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ä–∏—Å–∫"

def index(request):
    if request.method == 'POST':
        form = ProjectForm(request.POST)
        if form.is_valid():
            # –î–∞–Ω–Ω—ã–µ, –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            user_data = form.cleaned_data
            user_score = calculate_risk_score(user_data)

            # –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å –ø–æ–º–æ—â—å—é GWO
            optimized = gwo_optimize()
            optimized_score = optimized['min_risk_score']

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            RiskEvaluation.objects.create(
                budget=user_data['budget'],
                duration=user_data['duration'],
                novelty=user_data['novelty'],
                experience=user_data['experience'],
                contractors=user_data['contractors'],
                risk_plan=user_data['risk_plan'],
                time_buffer=user_data['time_buffer'],
                cost_buffer=user_data['cost_buffer'],
                user_score=user_score,
                optimized_score=optimized_score
            )

            return render(request, 'risk_app/result.html', {
                'form_data': user_data,
                'user_score': user_score,
                'risk_category': interpret_risk(user_score),
                'optimized_score': optimized_score,
                'optimized_values': optimized['best_solution'],
                'optimized_category': interpret_risk(optimized_score)
            })
    else:
        form = ProjectForm()

    return render(request, 'risk_app/form.html', {'form': form})